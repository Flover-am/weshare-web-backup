# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml



stages:          # List of stages for jobs, and their order of execution
  - build
  # - deploy

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  environment: production
  script:
    - echo "Compiling the code..."
    - docker build -t devops/web_hci .
    - docker save devops/web_hci -o web_hci.tar
    - echo "Compile complete."
    - echo "Deploying application..."
    - sshpass -p "$SERVER_PASSWORD" scp -o StrictHostKeyChecking=no web_hci.tar root@$SERVER_IP:~
    - sshpass -p "$SERVER_PASSWORD" ssh -o StrictHostKeyChecking=no root@$SERVER_IP 'docker container rm -f
      web_hci; docker load -i web_hci.tar; docker run -d --name web_hci -p 995:80
      devops/web_hci /bin/bash -c "nginx; tail -f /dev/null"'
    - echo "Application successfully deployed."
  artifacts:
    untracked: true

# deploy-job:      # This job runs in the deploy stage.
  # stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  # environment: production
  # script:
  #   - echo "Deploying application..."
  #   - sshpass -p "$SERVER_PASSWORD" scp -o StrictHostKeyChecking=no web_hci.tar root@$SERVER_IP:~
  #   - sshpass -p "$SERVER_PASSWORD" ssh -o StrictHostKeyChecking=no root@$SERVER_IP 'docker container rm -f
  #     web_hci; docker load -i web_hci.tar; docker run -d --name web_hci -p 995:80
  #     devops/web_hci /bin/bash -c "nginx; tail -f /dev/null"'
  #   - echo "Application successfully deployed."
